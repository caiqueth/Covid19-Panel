.colarCaminho <- function(x = readClipboard()) normalizePath(x)
.colarCaminho()
readClipboard()
.colarCaminho <- function(x = readClipboard()) gsub(normalizePath(x, winslash='/'))
.colarCaminho()
.colarCaminho()
.colarCaminho <- function(x = readClipboard()) gsub('','',normalizePath(x, winslash='/'))
.colarCaminho()
.colarCaminho <- function(x = readClipboard()) return(gsub('','',normalizePath(x, winslash='/')))
.colarCaminho()
zz <- .colarCaminho()
.colarCaminho <- function(x = readClipboard()) return(gsub('','',normalizePath(x, winslash='/', mustWork=TRUE)))
zz <- .colarCaminho()
.colarCaminho <- function(x = readClipboard()) return(as.character(gsub('','',normalizePath(x, winslash='/', mustWork=TRUE))))
zz <- .colarCaminho()
.colarCaminho <- function(x = readClipboard()) return(as.character(normalizePath(gsub('\\\\', '', x), winslash='/', mustWork=TRUE)))
zz <- .colarCaminho()
.colarCaminho <- function(x = readClipboard()) return(as.character(normalizePath(gsub('\\\\', '/', x), winslash='/', mustWork=TRUE)))
zz <- .colarCaminho()
readClipboard()
zz <- readClipboard()
str(zz)
.colarCaminho <- function(x = readClipboard()) return(as.character(normalizePath(gsub('\\"', '', x), winslash='/', mustWork=TRUE)))
str(zz)
zz <- readClipboard()
zz
readClipboard()
.colarCaminho <- function(x = readClipboard()) return(as.character(normalizePath(gsub('\"', '', x), winslash='/', mustWork=TRUE)))
readClipboard()
zz
zz <- readClipboard()
zz
library(data.table)
zz <- fread('C:/Users/Caique/Desktop/time_series_19-covid-Confirmed.csv')
zz
zz
setnames(zz, c('Province/State', 'pais', 'lat', 'long'), c('estado', 'pais', 'lat', 'long'))
setnames(zz, c('Province/State', 'Country/Region', 'Lat', 'Long'), c('estado', 'pais', 'lat', 'long'))
zz
melt(zz, id.vars= c('estado', 'pais', 'lat', 'long'))
xx <- melt(zz, id.vars= c('estado', 'pais', 'lat', 'long'))
xxc
xx
str(xx)
setnames(xx, c('variable'), c('dia'))
xx
setnames(xx, c('value'), c('casosConfirmados'))
xx
xx[pais=='Brazil'\
xx[pais=='Brazil']
xx[pais %chin% c('Brazil', 'Italy')]
dt0 <- xx[pais %chin% c('Brazil', 'Italy')]
dt0
library(ggplot2)
xx
xx[, dia := as.POSIXct(dia, format = '%m/%d/%Y')]
xx
dt0 <- xx[pais %chin% c('Brazil', 'Italy')]
ggplot(dt0, aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path()
ggplot(dt0, aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point()
ggplot(dt0, aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point()
ggplot(dt0[pais == 'Brazil'], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point()
ggplot(dt0, aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~.)
ggplot(dt0, aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free_y')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan')], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free_y')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan')], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~.)
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~.)
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free_x')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(.~pais, scales = 'free')
xx
write.csv2(xx, 'C:/Users/Caique/Desktop/casosConfirmados_long.csv', row.names = F)
library(ggmap)
install.packages('ggmap')
library(ggmap)
install.packages('rlang')
q()
ggmap()
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(.~pais, scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan', 'Spain') & casosConfirmados > 0], aes(x=dia, y=casosConfirmados, colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan', 'Spain') & casosConfirmados > 0], aes(x=dia, y=log(casosConfirmados), colour=pais)) + geom_path() + geom_point() + facet_grid(pais~., scales = 'free')
ggplot(xx[pais %chin% c('Brazil', 'Italy', 'Japan', 'Spain') & casosConfirmados > 0], aes(x=dia, y=log(casosConfirmados), colour=pais)) + geom_path() + geom_point()
savehistory()
library(shiny); runApp('C:/Users/Caique/Desktop/coronavirus_analysis.R')
library(shiny); runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
library('shiny')
library('shinydashboard')
library('data.table')
library('ggplot2')
library('DT')
library('plotly')
library('leaflet')
###### Tratamento dos dados
fonte <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv'
dados <- fread(fonte)
setnames(dados, c('Province/State', 'Country/Region', 'Lat', 'Long'), c('provinceOrState', 'countryOrRegion', 'lat', 'long'))
dados <- melt(dados, id.vars = c('provinceOrState', 'countryOrRegion', 'lat', 'long'))
setnames(dados, c('variable', 'value'), c('date', 'confirmedCases'))
dados[, date := as.POSIXct(date, format = '%m/%d/%y')]
dados[, totalConfirmedCases := sum(confirmedCases), by = .(countryOrRegion, date)]
###### UI
ui <- dashboardPage(
dashboardHeader(title = 'COVID-19'),
dashboardSidebar(sidebarMenu(
menuItem('Evolução', tabName = 'evolucao', icon = icon('dashboard')),
menuItem('Mapa',     tabName = 'mapa',     icon = icon('map'))
),
selectInput('paises', 'Países:', dados[, sort(unique(countryOrRegion))], selected = 'Brazil', multiple = TRUE)),
dashboardBody(
tags$head(tags$link(rel = 'stylesheet', type = 'text/css', href = 'custom.css')),
tags$style(type = "text/css", "#map {height: calc(100vh - 80px) !important;}"),
tabItems(
tabItem(tabName = 'evolucao',
fluidRow(box(plotlyOutput('grafico', width = '100%', height = '100%'), width = 12, height = 500)),
fluidRow(
box(DT::dataTableOutput('tabela', width = '100%', height = '100%'), width = 6, height = 500),
box('', width = 6, height = 500)
)),
tabItem(tabName = 'mapa',
fluidRow(
box(leafletOutput('worldmap', height = 600), width = 12, height = 630)
)
)
)
)
)
####### SERVER
server <- function(input, output) {
output$grafico <- renderPlotly({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
plt <- ggplot(plotar, aes(x = daysSinceDayOne, y = totalConfirmedCases, colour = countryOrRegion)) +
geom_path() +
geom_point()
ggplotly(plt)
})
output$tabela <- DT::renderDataTable({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
plotar[, .(`País` = countryOrRegion, Data = format(date, '%d/%m/%Y'), `Casos` = totalConfirmedCases)]
})
output$worldmap <- renderLeaflet({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap,
options = providerTileOptions(noWrap = TRUE)) %>%
addMarkers(data = plotar[, .(lat, long)])
})
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
library('data.table')
library('ggplot2')
library('DT')
library('plotly')
library('leaflet')
###### Tratamento dos dados
fonte <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv'
dados <- fread(fonte)
setnames(dados, c('Province/State', 'Country/Region', 'Lat', 'Long'), c('provinceOrState', 'countryOrRegion', 'lat', 'long'))
dados <- melt(dados, id.vars = c('provinceOrState', 'countryOrRegion', 'lat', 'long'))
setnames(dados, c('variable', 'value'), c('date', 'confirmedCases'))
dados[, date := as.POSIXct(date, format = '%m/%d/%y')]
dados[, totalConfirmedCases := sum(confirmedCases), by = .(countryOrRegion, date)]
###### UI
ui <- dashboardPage(
dashboardHeader(title = 'COVID-19'),
dashboardSidebar(sidebarMenu(
menuItem('Evolução', tabName = 'evolucao', icon = icon('dashboard')),
menuItem('Mapa',     tabName = 'mapa',     icon = icon('map'))
),
selectInput('paises', 'Países:', dados[, sort(unique(countryOrRegion))], selected = 'Brazil', multiple = TRUE)),
dashboardBody(
tags$head(tags$link(rel = 'stylesheet', type = 'text/css', href = 'custom.css')),
tags$style(type = "text/css", "#map {height: calc(100vh - 80px) !important;}"),
tabItems(
tabItem(tabName = 'evolucao',
fluidRow(box(plotlyOutput('grafico', width = '100%', height = '100%'), width = 12, height = 500)),
fluidRow(
box(DT::dataTableOutput('tabela', width = '100%', height = '100%'), width = 6, height = 500),
box('', width = 6, height = 500)
)),
tabItem(tabName = 'mapa',
fluidRow(
box(leafletOutput('worldmap', height = 600), width = 12, height = 630)
)
)
)
)
)
####### SERVER
server <- function(input, output) {
output$grafico <- renderPlotly({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
plt <- ggplot(plotar, aes(x = daysSinceDayOne, y = totalConfirmedCases, colour = countryOrRegion)) +
geom_path() +
geom_point()
ggplotly(plt)
})
output$tabela <- DT::renderDataTable({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
plotar[, .(`País` = countryOrRegion, Data = format(date, '%d/%m/%Y'), `Casos` = totalConfirmedCases)]
})
output$worldmap <- renderLeaflet({
plotar <- dados[countryOrRegion %chin% input$paises, .SD[.N], by = .(countryOrRegion, date)]
plotar[totalConfirmedCases > 0, daysSinceDayOne := 1:.N, by = countryOrRegion]
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap,
options = providerTileOptions(noWrap = TRUE)) %>%
addMarkers(data = plotar[, .(lat, long)])
})
}
shinyApp(ui, server)
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
?ggplotly()
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
runApp('C:/Users/Caique/Desktop/COVID-Panel/coronavirus_analysis.R')
